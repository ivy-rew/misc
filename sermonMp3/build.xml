<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     25.11.2016 19:36:17                                                        

     sermon uploader
                                                                                  
     ====================================================================== -->
<project name="project" default="default">
	<taskdef name="antform" classname="com.sardak.antform.AntForm" 
	            classpath="lib/antform.jar"/>
	
    <target name="default" depends="init, normalize, encodeMp3Lib, sermonUpload" >
        
    </target>

	<property file="ant.properties"/>
	
	<target name="init" depends="inputForm">
		<fileset dir="${recording.directory}" id="wav.in.fs">
			<include name="*.wav"/>
		</fileset>
    	<pathconvert property="raw.input.file" refid="wav.in.fs"></pathconvert>
    	<echo>${raw.input.file}</echo>
		<available file="${raw.input.file}" property="wav.available"></available>
		<fail unless="wav.available">
			Kein WAV in Ordner ${recording.directory} gefunden.
		</fail>
		
    	<tstamp>
    	    <format property="date.now" pattern="yyyy-MM-dd" locale="de,CH"/>
    	  </tstamp>
    	<property name="mp3.output.file" value="${recording.directory}/${date.now}_${sermon.title}.mp3"/>
	</target>
	
	<target name="inputForm">
		<antform title="Sermon Uploader"  >
			<textproperty label="Titel der Predigt (ohne Datum)" property="sermon.title"
				tooltip="Without special characters like umlauts or white spaces"
				focus="true"/>
			<fileselectionproperty 
				label="WAV recording directory" property="recording.directory"
				tooltip="the newest WAV file in this directory will be converted and uploaded"
				directorychooser="true" />
			<booleanproperty label="Normalize WAV" property="wav.normalize"
				tooltip="Maximizes the loudness of the recorded WAV"/>
			<selectionproperty label="MP3 quality" property="mp3.vbr.quality" 
				tooltip="9 lowest quality (small files), 0 best quality (large files)"
				values="9,8,7,6,5,4,3,2,1,0"/>
			<controlbar>
				<button type="cancel" label="Cancel" target="abort"/>
				<button type="ok" label="OK"/>
			</controlbar>
		</antform>
	</target>
	
	<target name="abort">
		<fail message="Sermon upload aborted by user"/>
	</target>
	
	<target name="inputConsole">
    	<input message="Bitte Titel (ohne Datum) der Predigt eingeben. \nMoeglichst ohne Leerschlaege, Umlaute oder Sonderzeichen." addproperty="sermon.title"/>
	</target>
	
	<target name="normalize" if="wav.normalize">
		<exec executable="lib/normalize.exe">
			<arg value="${raw.input.file}"/>
		</exec>
	</target>
		
	<target name="encodeMp3Lib">
		<echo>Encoding mp3 ${mp3.output.file}"/></echo>
		<java classname="net.sourceforge.lame.mp3.Main">
			<arg value="-V"/>
			<arg value="${mp3.vbr.quality}"/>
			<arg value="--brief"/>
			<arg value="--vbr-old"/>
			<arg value="--disptime"/>
			<arg value="1"/><!-- updates in seconds-->
			<arg value="--resample"/>
			<arg value="44"/><!-- 44'100 KameHZ -->
    		<arg value="${raw.input.file}"/>
    		<arg value="${mp3.output.file}"/>
		</java>
    </target>
	
	<target name="encodeLibHelp">
		<java classname="net.sourceforge.lame.mp3.Main">
			<arg value="--longhelp"/>
		</java>
	</target>
	
    <target name="encodeMp3Binary" 
    	description="windows only!">
		<echo>Encoding mp3 ${mp3.output.file}"/></echo>
    	<exec executable="lame/lame.exe">
    		<arg value="-V ${mp3.vbr.quality}"/>
    		<arg value="${raw.input.file}"/>
    		<arg value="${mp3.output.file}"/>
    	</exec>
    </target>
	
	<target name="sermonUpload">
		<echo>Uploading ${mp3.output.file} to ${ftp.host}</echo>
		<antcall target="filezillaUpload" />
	</target>
	
	<target name="filezillaUpload">
		<property name="fzPath"
		            location="${filezilla.path}/filezilla"/>
		  <exec executable="${fzPath}">
		  	<!-- [protocol://][us//er[:pass]@]host[:port][/path] -->
		  	<arg value="${ftp.user}:${ftp.pass}@${ftp.host}:${ftp.port}"/>
		  	<arg value="--local=${recording.directory}"/>
		</exec>
	</target>
	
	<target name="sftpUpload">
		<scp todir="${ftp.user}:${ftp.pass}@${ftp.host}:/" 
			port="${ftp.port}"
			sftp="true" trust="true" verbose="true" 
			file="${mp3.output.file}"/> 
	</target>

	<target name="ftpUpload">
		<ftp action="send" verbose="true"
			server="${ftp.host}" userid="${ftp.user}" password="${ftp.pass}">
			<fileset>
				<includesfile name="${mp3.output.file}"/>
			</fileset>
		</ftp>
	</target>
</project>
